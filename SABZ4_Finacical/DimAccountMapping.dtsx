<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="4/30/2022 12:13:50 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="PMO038"
  DTS:CreatorName="KHEILISABZ\m.peyrovian"
  DTS:DTSID="{E47A616D-500B-411E-9FD5-8AB0F04A932A}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.170"
  DTS:LocaleID="1033"
  DTS:ObjectName="DimAccountMapping"
  DTS:PackageType="5"
  DTS:VersionBuild="115"
  DTS:VersionGUID="{AC824815-4718-4609-922A-4AB1A99EBFEC}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7EB7305E-9F97-4191-AD3A-A56C41D6A1A8}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RowCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Create AccountParentKey"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{CCE41AAB-2ECB-4C0F-A4CC-6C9B417D4867}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Create AccountParentKey"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Create AccountParentKey\Extract AccountKey from DimAccount"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Extract AccountKey from DimAccount"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[FIN].[DimAccountMapping]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Create AccountParentKey\Extract AccountKey from DimAccount.Connections[OleDbConnection]"
                  connectionManagerID="{938FC08E-73EB-4919-B53E-85302529450D}:external"
                  connectionManagerRefId="Project.ConnectionManagers[172.16.50.56.SABZDW 1]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Create AccountParentKey\Extract AccountKey from DimAccount.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create AccountParentKey\Extract AccountKey from DimAccount.Outputs[OLE DB Source Output].Columns[AccountKey]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create AccountParentKey\Extract AccountKey from DimAccount.Outputs[OLE DB Source Output].ExternalColumns[AccountKey]"
                      lineageId="Package\Create AccountParentKey\Extract AccountKey from DimAccount.Outputs[OLE DB Source Output].Columns[AccountKey]"
                      name="AccountKey"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create AccountParentKey\Extract AccountKey from DimAccount.Outputs[OLE DB Source Output].Columns[AccountCode]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create AccountParentKey\Extract AccountKey from DimAccount.Outputs[OLE DB Source Output].ExternalColumns[AccountCode]"
                      length="50"
                      lineageId="Package\Create AccountParentKey\Extract AccountKey from DimAccount.Outputs[OLE DB Source Output].Columns[AccountCode]"
                      name="AccountCode"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Create AccountParentKey\Extract AccountKey from DimAccount.Outputs[OLE DB Source Output].ExternalColumns[AccountKey]"
                      dataType="i4"
                      name="AccountKey" />
                    <externalMetadataColumn
                      refId="Package\Create AccountParentKey\Extract AccountKey from DimAccount.Outputs[OLE DB Source Output].ExternalColumns[Name]"
                      dataType="wstr"
                      length="255"
                      name="Name" />
                    <externalMetadataColumn
                      refId="Package\Create AccountParentKey\Extract AccountKey from DimAccount.Outputs[OLE DB Source Output].ExternalColumns[IsPLAccount]"
                      dataType="bool"
                      name="IsPLAccount" />
                    <externalMetadataColumn
                      refId="Package\Create AccountParentKey\Extract AccountKey from DimAccount.Outputs[OLE DB Source Output].ExternalColumns[AccountMappingKey]"
                      dataType="i4"
                      name="AccountMappingKey" />
                    <externalMetadataColumn
                      refId="Package\Create AccountParentKey\Extract AccountKey from DimAccount.Outputs[OLE DB Source Output].ExternalColumns[AccountMappingAlternateKey]"
                      dataType="wstr"
                      length="101"
                      name="AccountMappingAlternateKey" />
                    <externalMetadataColumn
                      refId="Package\Create AccountParentKey\Extract AccountKey from DimAccount.Outputs[OLE DB Source Output].ExternalColumns[AccountCode]"
                      dataType="wstr"
                      length="50"
                      name="AccountCode" />
                    <externalMetadataColumn
                      refId="Package\Create AccountParentKey\Extract AccountKey from DimAccount.Outputs[OLE DB Source Output].ExternalColumns[SourceName]"
                      dataType="wstr"
                      length="50"
                      name="SourceName" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Create AccountParentKey\Extract AccountKey from DimAccount.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create AccountParentKey\Extract AccountKey from DimAccount.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Create AccountParentKey\Extract AccountKey from DimAccount.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Create AccountParentKey\Extract AccountKey from DimAccount.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Create AccountParentKey\Extract AccountKey from DimAccount.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Create AccountParentKey\Extract AccountKey from DimAccount.Outputs[OLE DB Source Error Output].Columns[AccountKey]"
                      dataType="i4"
                      lineageId="Package\Create AccountParentKey\Extract AccountKey from DimAccount.Outputs[OLE DB Source Error Output].Columns[AccountKey]"
                      name="AccountKey" />
                    <outputColumn
                      refId="Package\Create AccountParentKey\Extract AccountKey from DimAccount.Outputs[OLE DB Source Error Output].Columns[AccountCode]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create AccountParentKey\Extract AccountKey from DimAccount.Outputs[OLE DB Source Error Output].Columns[AccountCode]"
                      name="AccountCode" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create AccountParentKey\Load AccountParentKey into DimAccount"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Load AccountParentKey into DimAccount"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[FIN].[DimAccountMapping]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS,ROWS_PER_BATCH = 1000</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Create AccountParentKey\Load AccountParentKey into DimAccount.Connections[OleDbConnection]"
                  connectionManagerID="{938FC08E-73EB-4919-B53E-85302529450D}:external"
                  connectionManagerRefId="Project.ConnectionManagers[172.16.50.56.SABZDW 1]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Create AccountParentKey\Load AccountParentKey into DimAccount.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create AccountParentKey\Load AccountParentKey into DimAccount.Inputs[OLE DB Destination Input].Columns[AccountKey]"
                      cachedDataType="i4"
                      cachedName="AccountKey"
                      externalMetadataColumnId="Package\Create AccountParentKey\Load AccountParentKey into DimAccount.Inputs[OLE DB Destination Input].ExternalColumns[AccountKey]"
                      lineageId="Package\Create AccountParentKey\Extract AccountKey from DimAccount.Outputs[OLE DB Source Output].Columns[AccountKey]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Create AccountParentKey\Load AccountParentKey into DimAccount.Inputs[OLE DB Destination Input].ExternalColumns[AccountKey]"
                      dataType="i4"
                      name="AccountKey" />
                    <externalMetadataColumn
                      refId="Package\Create AccountParentKey\Load AccountParentKey into DimAccount.Inputs[OLE DB Destination Input].ExternalColumns[Name]"
                      dataType="wstr"
                      length="255"
                      name="Name" />
                    <externalMetadataColumn
                      refId="Package\Create AccountParentKey\Load AccountParentKey into DimAccount.Inputs[OLE DB Destination Input].ExternalColumns[IsPLAccount]"
                      dataType="bool"
                      name="IsPLAccount" />
                    <externalMetadataColumn
                      refId="Package\Create AccountParentKey\Load AccountParentKey into DimAccount.Inputs[OLE DB Destination Input].ExternalColumns[AccountMappingKey]"
                      dataType="i4"
                      name="AccountMappingKey" />
                    <externalMetadataColumn
                      refId="Package\Create AccountParentKey\Load AccountParentKey into DimAccount.Inputs[OLE DB Destination Input].ExternalColumns[AccountMappingAlternateKey]"
                      dataType="wstr"
                      length="101"
                      name="AccountMappingAlternateKey" />
                    <externalMetadataColumn
                      refId="Package\Create AccountParentKey\Load AccountParentKey into DimAccount.Inputs[OLE DB Destination Input].ExternalColumns[AccountCode]"
                      dataType="wstr"
                      length="50"
                      name="AccountCode" />
                    <externalMetadataColumn
                      refId="Package\Create AccountParentKey\Load AccountParentKey into DimAccount.Inputs[OLE DB Destination Input].ExternalColumns[SourceName]"
                      dataType="wstr"
                      length="50"
                      name="SourceName" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create AccountParentKey\Load AccountParentKey into DimAccount.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Create AccountParentKey\Load AccountParentKey into DimAccount.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create AccountParentKey\Load AccountParentKey into DimAccount.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Create AccountParentKey\Load AccountParentKey into DimAccount.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Create AccountParentKey\Load AccountParentKey into DimAccount.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Create AccountParentKey\Load AccountParentKey into DimAccount.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create AccountParentKey\Lookup"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [FIN].[DimAccount]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [FIN].[DimAccount]) [refTable]
where [refTable].[AccountAlternateKey] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="AccountKey" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="AccountAlternateKey" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="AccountParentKey" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="AccountParentAlternateKey" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="AccountLevel" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Name" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="IsPLAccount" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Create AccountParentKey\Extract AccountKey from DimAccount.Outputs[OLE DB Source Output].Columns[AccountCode]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Create AccountParentKey\Lookup.Connections[OleDbConnection]"
                  connectionManagerID="{938FC08E-73EB-4919-B53E-85302529450D}:external"
                  connectionManagerRefId="Project.ConnectionManagers[172.16.50.56.SABZDW 1]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Create AccountParentKey\Lookup.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create AccountParentKey\Lookup.Inputs[Lookup Input].Columns[AccountCode]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="AccountCode"
                      lineageId="Package\Create AccountParentKey\Extract AccountKey from DimAccount.Outputs[OLE DB Source Output].Columns[AccountCode]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">AccountAlternateKey</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Create AccountParentKey\Lookup.Inputs[Lookup Input].Columns[AccountKey]"
                      cachedDataType="i4"
                      cachedName="AccountKey"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\Create AccountParentKey\Extract AccountKey from DimAccount.Outputs[OLE DB Source Output].Columns[AccountKey]"
                      truncationRowDisposition="FailComponent"
                      usageType="readWrite">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn" />
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">AccountKey</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create AccountParentKey\Lookup.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Create AccountParentKey\Lookup.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Create AccountParentKey\Lookup.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Create AccountParentKey\Lookup.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Create AccountParentKey\Lookup.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Create AccountParentKey\Lookup.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create AccountParentKey\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Create AccountParentKey\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Create AccountParentKey\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Create AccountParentKey\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Create AccountParentKey.Paths[Lookup Match Output]"
              endId="Package\Create AccountParentKey\Load AccountParentKey into DimAccount.Inputs[OLE DB Destination Input]"
              name="Lookup Match Output"
              startId="Package\Create AccountParentKey\Lookup.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Create AccountParentKey.Paths[OLE DB Source Output]"
              endId="Package\Create AccountParentKey\Lookup.Inputs[Lookup Input]"
              name="OLE DB Source Output"
              startId="Package\Create AccountParentKey\Extract AccountKey from DimAccount.Outputs[OLE DB Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:DelayValidation="True"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{BC576E45-BDCC-4B65-A817-1BFE3464D368}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Extract AccountMapping Data From Excel and Load into DimAccountMapping"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Add BS Ledger Accounts Level"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Add BS Ledger Accounts Level"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Add BS Ledger Accounts Level.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Add BS Ledger Accounts Level.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Add BS Ledger Accounts Level.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Add BS Ledger Accounts Level.Outputs[Derived Column Output].Columns[IsPLAccount]"
                      dataType="bool"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Add BS Ledger Accounts Level.Outputs[Derived Column Output].Columns[IsPLAccount]"
                      name="IsPLAccount"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_BOOL)0</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_BOOL)0</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Add BS Ledger Accounts Level.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Add BS Ledger Accounts Level.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Add BS Ledger Accounts Level.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Add BS Ledger Accounts Level.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Add BS Ledger Accounts Level.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Add BS Ledger Accounts Level.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Add PL Ledger Accounts Level"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Add PL Ledger Accounts Level"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Add PL Ledger Accounts Level.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Add PL Ledger Accounts Level.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Add PL Ledger Accounts Level.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Add PL Ledger Accounts Level.Outputs[Derived Column Output].Columns[IsPLAccount]"
                      dataType="bool"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Add PL Ledger Accounts Level.Outputs[Derived Column Output].Columns[IsPLAccount]"
                      name="IsPLAccount"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_BOOL)1</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_BOOL)1</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Add PL Ledger Accounts Level.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Add PL Ledger Accounts Level.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Add PL Ledger Accounts Level.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Add PL Ledger Accounts Level.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Add PL Ledger Accounts Level.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Add PL Ledger Accounts Level.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\BS Ledger Accounts"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="BS Ledger Accounts"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">'سرفصل های صورت سود وزیان$'</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\BS Ledger Accounts.Connections[OleDbConnection]"
                  connectionManagerID="{112D2919-9B83-4638-B319-DB452E734E64}:external"
                  connectionManagerRefId="Project.ConnectionManagers[Excel Connection Manager 1]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\BS Ledger Accounts.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\BS Ledger Accounts.Outputs[Excel Source Output].Columns[Name]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\BS Ledger Accounts.Outputs[Excel Source Output].ExternalColumns[سرفصل های صورت سود و زیان]"
                      length="255"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\BS Ledger Accounts.Outputs[Excel Source Output].Columns[Name]"
                      name="Name"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\BS Ledger Accounts.Outputs[Excel Source Output].Columns[AccountMappingAlternateKey]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\BS Ledger Accounts.Outputs[Excel Source Output].ExternalColumns[کد معین]"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\BS Ledger Accounts.Outputs[Excel Source Output].Columns[AccountMappingAlternateKey]"
                      name="AccountMappingAlternateKey"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\BS Ledger Accounts.Outputs[Excel Source Output].Columns[SourceName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\BS Ledger Accounts.Outputs[Excel Source Output].ExternalColumns[Column1]"
                      length="255"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\BS Ledger Accounts.Outputs[Excel Source Output].Columns[SourceName]"
                      name="SourceName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\BS Ledger Accounts.Outputs[Excel Source Output].Columns[AccountCode]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\BS Ledger Accounts.Outputs[Excel Source Output].ExternalColumns[LedgerCode]"
                      length="255"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\BS Ledger Accounts.Outputs[Excel Source Output].Columns[AccountCode]"
                      name="AccountCode"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\BS Ledger Accounts.Outputs[Excel Source Output].ExternalColumns[سرفصل های صورت سود و زیان]"
                      dataType="wstr"
                      length="255"
                      name="سرفصل های صورت سود و زیان" />
                    <externalMetadataColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\BS Ledger Accounts.Outputs[Excel Source Output].ExternalColumns[کد کل]"
                      dataType="wstr"
                      length="255"
                      name="کد کل" />
                    <externalMetadataColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\BS Ledger Accounts.Outputs[Excel Source Output].ExternalColumns[عنوان کل]"
                      dataType="wstr"
                      length="255"
                      name="عنوان کل" />
                    <externalMetadataColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\BS Ledger Accounts.Outputs[Excel Source Output].ExternalColumns[کد معین]"
                      dataType="r8"
                      name="کد معین" />
                    <externalMetadataColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\BS Ledger Accounts.Outputs[Excel Source Output].ExternalColumns[عنوان معین]"
                      dataType="wstr"
                      length="255"
                      name="عنوان معین" />
                    <externalMetadataColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\BS Ledger Accounts.Outputs[Excel Source Output].ExternalColumns[توضیحات]"
                      dataType="wstr"
                      length="255"
                      name="توضیحات" />
                    <externalMetadataColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\BS Ledger Accounts.Outputs[Excel Source Output].ExternalColumns[Column1]"
                      dataType="wstr"
                      length="255"
                      name="Column1" />
                    <externalMetadataColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\BS Ledger Accounts.Outputs[Excel Source Output].ExternalColumns[GroupCode]"
                      dataType="wstr"
                      length="255"
                      name="GroupCode" />
                    <externalMetadataColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\BS Ledger Accounts.Outputs[Excel Source Output].ExternalColumns[GeneralCode]"
                      dataType="wstr"
                      length="255"
                      name="GeneralCode" />
                    <externalMetadataColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\BS Ledger Accounts.Outputs[Excel Source Output].ExternalColumns[LedgerCode]"
                      dataType="wstr"
                      length="255"
                      name="LedgerCode" />
                    <externalMetadataColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\BS Ledger Accounts.Outputs[Excel Source Output].ExternalColumns[F11]"
                      dataType="wstr"
                      length="255"
                      name="F11" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\BS Ledger Accounts.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\BS Ledger Accounts.Outputs[Excel Source Error Output].Columns[سرفصل های صورت سود و زیان]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\BS Ledger Accounts.Outputs[Excel Source Error Output].Columns[سرفصل های صورت سود و زیان]"
                      name="سرفصل های صورت سود و زیان" />
                    <outputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\BS Ledger Accounts.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\BS Ledger Accounts.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\BS Ledger Accounts.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\BS Ledger Accounts.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\BS Ledger Accounts.Outputs[Excel Source Error Output].Columns[کد معین]"
                      dataType="r8"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\BS Ledger Accounts.Outputs[Excel Source Error Output].Columns[کد معین]"
                      name="کد معین" />
                    <outputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\BS Ledger Accounts.Outputs[Excel Source Error Output].Columns[Column1]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\BS Ledger Accounts.Outputs[Excel Source Error Output].Columns[Column1]"
                      name="Column1" />
                    <outputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\BS Ledger Accounts.Outputs[Excel Source Error Output].Columns[LedgerCode]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\BS Ledger Accounts.Outputs[Excel Source Error Output].Columns[LedgerCode]"
                      name="LedgerCode" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[FIN].[DimAccountMapping]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="{938FC08E-73EB-4919-B53E-85302529450D}:external"
                  connectionManagerRefId="Project.ConnectionManagers[172.16.50.56.SABZDW 1]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Name]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Name"
                      cachedSortKeyPosition="1"
                      externalMetadataColumnId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Name]"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Sort.Outputs[Sort Output].Columns[Name]" />
                    <inputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[AccountMappingAlternateKey]"
                      cachedDataType="r8"
                      cachedName="AccountMappingAlternateKey"
                      cachedSortKeyPosition="2"
                      externalMetadataColumnId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AccountMappingAlternateKey]"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Sort.Outputs[Sort Output].Columns[AccountMappingAlternateKey]" />
                    <inputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[IsPLAccount]"
                      cachedDataType="bool"
                      cachedName="IsPLAccount"
                      cachedSortKeyPosition="3"
                      externalMetadataColumnId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[IsPLAccount]"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Sort.Outputs[Sort Output].Columns[IsPLAccount]" />
                    <inputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[SourceName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="SourceName"
                      cachedSortKeyPosition="4"
                      externalMetadataColumnId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SourceName]"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Sort.Outputs[Sort Output].Columns[SourceName]" />
                    <inputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[AccountCode]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="AccountCode"
                      cachedSortKeyPosition="5"
                      externalMetadataColumnId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AccountCode]"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Sort.Outputs[Sort Output].Columns[AccountCode]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AccountMappingKey]"
                      dataType="i4"
                      name="AccountMappingKey" />
                    <externalMetadataColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AccountMappingAlternateKey]"
                      dataType="wstr"
                      length="50"
                      name="AccountMappingAlternateKey" />
                    <externalMetadataColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AccountKey]"
                      dataType="i4"
                      name="AccountKey" />
                    <externalMetadataColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SourceName]"
                      dataType="wstr"
                      length="50"
                      name="SourceName" />
                    <externalMetadataColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Name]"
                      dataType="wstr"
                      length="255"
                      name="Name" />
                    <externalMetadataColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[IsPLAccount]"
                      dataType="bool"
                      name="IsPLAccount" />
                    <externalMetadataColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AccountCode]"
                      dataType="wstr"
                      length="50"
                      name="AccountCode" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\PL Ledger Accounts"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="PL Ledger Accounts"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">'سرفصل های صورت سود وزیان$'</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\PL Ledger Accounts.Connections[OleDbConnection]"
                  connectionManagerID="{112D2919-9B83-4638-B319-DB452E734E64}:external"
                  connectionManagerRefId="Project.ConnectionManagers[Excel Connection Manager 1]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\PL Ledger Accounts.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\PL Ledger Accounts.Outputs[Excel Source Output].Columns[Name]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\PL Ledger Accounts.Outputs[Excel Source Output].ExternalColumns[سرفصل های صورت سود و زیان]"
                      length="255"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\PL Ledger Accounts.Outputs[Excel Source Output].Columns[Name]"
                      name="Name"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\PL Ledger Accounts.Outputs[Excel Source Output].Columns[AccountMappingAlternateKey]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\PL Ledger Accounts.Outputs[Excel Source Output].ExternalColumns[کد معین]"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\PL Ledger Accounts.Outputs[Excel Source Output].Columns[AccountMappingAlternateKey]"
                      name="AccountMappingAlternateKey"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\PL Ledger Accounts.Outputs[Excel Source Output].Columns[SourceName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\PL Ledger Accounts.Outputs[Excel Source Output].ExternalColumns[Column1]"
                      length="255"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\PL Ledger Accounts.Outputs[Excel Source Output].Columns[SourceName]"
                      name="SourceName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\PL Ledger Accounts.Outputs[Excel Source Output].Columns[AccountCode]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\PL Ledger Accounts.Outputs[Excel Source Output].ExternalColumns[LedgerCode]"
                      length="255"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\PL Ledger Accounts.Outputs[Excel Source Output].Columns[AccountCode]"
                      name="AccountCode"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\PL Ledger Accounts.Outputs[Excel Source Output].ExternalColumns[سرفصل های صورت سود و زیان]"
                      dataType="wstr"
                      length="255"
                      name="سرفصل های صورت سود و زیان" />
                    <externalMetadataColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\PL Ledger Accounts.Outputs[Excel Source Output].ExternalColumns[کد کل]"
                      dataType="wstr"
                      length="255"
                      name="کد کل" />
                    <externalMetadataColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\PL Ledger Accounts.Outputs[Excel Source Output].ExternalColumns[عنوان کل]"
                      dataType="wstr"
                      length="255"
                      name="عنوان کل" />
                    <externalMetadataColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\PL Ledger Accounts.Outputs[Excel Source Output].ExternalColumns[کد معین]"
                      dataType="r8"
                      name="کد معین" />
                    <externalMetadataColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\PL Ledger Accounts.Outputs[Excel Source Output].ExternalColumns[عنوان معین]"
                      dataType="wstr"
                      length="255"
                      name="عنوان معین" />
                    <externalMetadataColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\PL Ledger Accounts.Outputs[Excel Source Output].ExternalColumns[توضیحات]"
                      dataType="wstr"
                      length="255"
                      name="توضیحات" />
                    <externalMetadataColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\PL Ledger Accounts.Outputs[Excel Source Output].ExternalColumns[Column1]"
                      dataType="wstr"
                      length="255"
                      name="Column1" />
                    <externalMetadataColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\PL Ledger Accounts.Outputs[Excel Source Output].ExternalColumns[GroupCode]"
                      dataType="wstr"
                      length="255"
                      name="GroupCode" />
                    <externalMetadataColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\PL Ledger Accounts.Outputs[Excel Source Output].ExternalColumns[GeneralCode]"
                      dataType="wstr"
                      length="255"
                      name="GeneralCode" />
                    <externalMetadataColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\PL Ledger Accounts.Outputs[Excel Source Output].ExternalColumns[LedgerCode]"
                      dataType="wstr"
                      length="255"
                      name="LedgerCode" />
                    <externalMetadataColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\PL Ledger Accounts.Outputs[Excel Source Output].ExternalColumns[F11]"
                      dataType="wstr"
                      length="255"
                      name="F11" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\PL Ledger Accounts.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\PL Ledger Accounts.Outputs[Excel Source Error Output].Columns[سرفصل های صورت سود و زیان]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\PL Ledger Accounts.Outputs[Excel Source Error Output].Columns[سرفصل های صورت سود و زیان]"
                      name="سرفصل های صورت سود و زیان" />
                    <outputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\PL Ledger Accounts.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\PL Ledger Accounts.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\PL Ledger Accounts.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\PL Ledger Accounts.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\PL Ledger Accounts.Outputs[Excel Source Error Output].Columns[کد معین]"
                      dataType="r8"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\PL Ledger Accounts.Outputs[Excel Source Error Output].Columns[کد معین]"
                      name="کد معین" />
                    <outputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\PL Ledger Accounts.Outputs[Excel Source Error Output].Columns[Column1]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\PL Ledger Accounts.Outputs[Excel Source Error Output].Columns[Column1]"
                      name="Column1" />
                    <outputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\PL Ledger Accounts.Outputs[Excel Source Error Output].Columns[LedgerCode]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\PL Ledger Accounts.Outputs[Excel Source Error Output].Columns[LedgerCode]"
                      name="LedgerCode" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Replace SourceName 1"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Replace SourceName 1"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Replace SourceName 1.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Replace SourceName 1.Inputs[Derived Column Input].Columns[SourceName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="SourceName"
                      cachedSortKeyPosition="4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Sort.Outputs[Sort Output].Columns[SourceName]"
                      truncationRowDisposition="FailComponent"
                      usageType="readWrite">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_WSTR,50)([REPLACE](#{Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Sort.Outputs[Sort Output].Columns[SourceName]},"باريزو","Sepidar"))</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_WSTR,50)(REPLACE(SourceName,"باريزو","Sepidar"))</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Replace SourceName 1.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Replace SourceName 1.Inputs[Derived Column Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Replace SourceName 1.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Replace SourceName 1.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Replace SourceName 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Replace SourceName 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Replace SourceName 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Replace SourceName 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Replace SourceName 2"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Replace SourceName 2"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Replace SourceName 2.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Replace SourceName 2.Inputs[Derived Column Input].Columns[SourceName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="SourceName"
                      cachedSortKeyPosition="4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Sort.Outputs[Sort Output].Columns[SourceName]"
                      truncationRowDisposition="FailComponent"
                      usageType="readWrite">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_WSTR,50)([REPLACE](#{Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Sort.Outputs[Sort Output].Columns[SourceName]},"سایر","Rahkaran"))</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_WSTR,50)(REPLACE(SourceName,"سایر","Rahkaran"))</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Replace SourceName 2.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Replace SourceName 2.Inputs[Derived Column Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Replace SourceName 2.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Replace SourceName 2.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Replace SourceName 2.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Replace SourceName 2.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Replace SourceName 2.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Replace SourceName 2.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Sort"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">true</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Sort.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Sort.Inputs[Sort Input].Columns[Name]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Name"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Union All.Outputs[Union All Output 1].Columns[Name]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Sort.Inputs[Sort Input].Columns[AccountMappingAlternateKey]"
                      cachedDataType="r8"
                      cachedName="AccountMappingAlternateKey"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Union All.Outputs[Union All Output 1].Columns[AccountMappingAlternateKey]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">2</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Sort.Inputs[Sort Input].Columns[IsPLAccount]"
                      cachedDataType="bool"
                      cachedName="IsPLAccount"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Union All.Outputs[Union All Output 1].Columns[IsPLAccount]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">3</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Sort.Inputs[Sort Input].Columns[SourceName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="SourceName"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Union All.Outputs[Union All Output 1].Columns[SourceName]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">4</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Sort.Inputs[Sort Input].Columns[AccountCode]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="AccountCode"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Union All.Outputs[Union All Output 1].Columns[AccountCode]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">5</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Sort.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Sort.Outputs[Sort Output].Columns[Name]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Sort.Outputs[Sort Output].Columns[Name]"
                      name="Name"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Union All.Outputs[Union All Output 1].Columns[Name]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Sort.Outputs[Sort Output].Columns[AccountMappingAlternateKey]"
                      dataType="r8"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Sort.Outputs[Sort Output].Columns[AccountMappingAlternateKey]"
                      name="AccountMappingAlternateKey"
                      sortKeyPosition="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Union All.Outputs[Union All Output 1].Columns[AccountMappingAlternateKey]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Sort.Outputs[Sort Output].Columns[IsPLAccount]"
                      dataType="bool"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Sort.Outputs[Sort Output].Columns[IsPLAccount]"
                      name="IsPLAccount"
                      sortKeyPosition="3">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Union All.Outputs[Union All Output 1].Columns[IsPLAccount]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Sort.Outputs[Sort Output].Columns[SourceName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Sort.Outputs[Sort Output].Columns[SourceName]"
                      name="SourceName"
                      sortKeyPosition="4">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Union All.Outputs[Union All Output 1].Columns[SourceName]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Sort.Outputs[Sort Output].Columns[AccountCode]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Sort.Outputs[Sort Output].Columns[AccountCode]"
                      name="AccountCode"
                      sortKeyPosition="5">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Union All.Outputs[Union All Output 1].Columns[AccountCode]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Union All"
              componentClassID="Microsoft.UnionAll"
              contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
              name="Union All"
              version="1">
              <inputs>
                <input
                  refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Union All.Inputs[Union All Input 1]"
                  name="Union All Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Union All.Inputs[Union All Input 1].Columns[Name]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Name"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\PL Ledger Accounts.Outputs[Excel Source Output].Columns[Name]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Union All.Outputs[Union All Output 1].Columns[Name]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Union All.Inputs[Union All Input 1].Columns[AccountMappingAlternateKey]"
                      cachedDataType="r8"
                      cachedName="AccountMappingAlternateKey"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\PL Ledger Accounts.Outputs[Excel Source Output].Columns[AccountMappingAlternateKey]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Union All.Outputs[Union All Output 1].Columns[AccountMappingAlternateKey]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Union All.Inputs[Union All Input 1].Columns[IsPLAccount]"
                      cachedDataType="bool"
                      cachedName="IsPLAccount"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Add PL Ledger Accounts Level.Outputs[Derived Column Output].Columns[IsPLAccount]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Union All.Outputs[Union All Output 1].Columns[IsPLAccount]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Union All.Inputs[Union All Input 1].Columns[SourceName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="SourceName"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\PL Ledger Accounts.Outputs[Excel Source Output].Columns[SourceName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Union All.Outputs[Union All Output 1].Columns[SourceName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Union All.Inputs[Union All Input 1].Columns[AccountCode]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="AccountCode"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\PL Ledger Accounts.Outputs[Excel Source Output].Columns[AccountCode]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Union All.Outputs[Union All Output 1].Columns[AccountCode]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Union All.Inputs[Union All Input 2]"
                  hasSideEffects="true"
                  name="Union All Input 2">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Union All.Inputs[Union All Input 2].Columns[Name]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Name"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\BS Ledger Accounts.Outputs[Excel Source Output].Columns[Name]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Union All.Outputs[Union All Output 1].Columns[Name]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Union All.Inputs[Union All Input 2].Columns[AccountMappingAlternateKey]"
                      cachedDataType="r8"
                      cachedName="AccountMappingAlternateKey"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\BS Ledger Accounts.Outputs[Excel Source Output].Columns[AccountMappingAlternateKey]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Union All.Outputs[Union All Output 1].Columns[AccountMappingAlternateKey]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Union All.Inputs[Union All Input 2].Columns[IsPLAccount]"
                      cachedDataType="bool"
                      cachedName="IsPLAccount"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Add BS Ledger Accounts Level.Outputs[Derived Column Output].Columns[IsPLAccount]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Union All.Outputs[Union All Output 1].Columns[IsPLAccount]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Union All.Inputs[Union All Input 2].Columns[SourceName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="SourceName"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\BS Ledger Accounts.Outputs[Excel Source Output].Columns[SourceName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Union All.Outputs[Union All Output 1].Columns[SourceName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Union All.Inputs[Union All Input 2].Columns[AccountCode]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="AccountCode"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\BS Ledger Accounts.Outputs[Excel Source Output].Columns[AccountCode]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Union All.Outputs[Union All Output 1].Columns[AccountCode]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Union All.Inputs[Union All Input 3]"
                  dangling="true"
                  hasSideEffects="true"
                  name="Union All Input 3">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Union All.Outputs[Union All Output 1]"
                  name="Union All Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Union All.Outputs[Union All Output 1].Columns[Name]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Union All.Outputs[Union All Output 1].Columns[Name]"
                      name="Name" />
                    <outputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Union All.Outputs[Union All Output 1].Columns[AccountMappingAlternateKey]"
                      dataType="r8"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Union All.Outputs[Union All Output 1].Columns[AccountMappingAlternateKey]"
                      name="AccountMappingAlternateKey" />
                    <outputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Union All.Outputs[Union All Output 1].Columns[IsPLAccount]"
                      dataType="bool"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Union All.Outputs[Union All Output 1].Columns[IsPLAccount]"
                      name="IsPLAccount" />
                    <outputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Union All.Outputs[Union All Output 1].Columns[SourceName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Union All.Outputs[Union All Output 1].Columns[SourceName]"
                      name="SourceName" />
                    <outputColumn
                      refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Union All.Outputs[Union All Output 1].Columns[AccountCode]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Union All.Outputs[Union All Output 1].Columns[AccountCode]"
                      name="AccountCode" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping.Paths[Derived Column Output]"
              endId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Union All.Inputs[Union All Input 1]"
              name="Derived Column Output"
              startId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Add PL Ledger Accounts Level.Outputs[Derived Column Output]" />
            <path
              refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping.Paths[Derived Column Output1]"
              endId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Union All.Inputs[Union All Input 2]"
              name="Derived Column Output"
              startId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Add BS Ledger Accounts Level.Outputs[Derived Column Output]" />
            <path
              refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping.Paths[Derived Column Output2]"
              endId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Replace SourceName 2.Inputs[Derived Column Input]"
              name="Derived Column Output"
              startId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Replace SourceName 1.Outputs[Derived Column Output]" />
            <path
              refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping.Paths[Derived Column Output3]"
              endId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Derived Column Output"
              startId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Replace SourceName 2.Outputs[Derived Column Output]" />
            <path
              refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping.Paths[Excel Source Output]"
              endId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Add BS Ledger Accounts Level.Inputs[Derived Column Input]"
              name="Excel Source Output"
              startId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\BS Ledger Accounts.Outputs[Excel Source Output]" />
            <path
              refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping.Paths[Excel Source Output1]"
              endId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Add PL Ledger Accounts Level.Inputs[Derived Column Input]"
              name="Excel Source Output"
              startId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\PL Ledger Accounts.Outputs[Excel Source Output]" />
            <path
              refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping.Paths[Sort Output]"
              endId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Replace SourceName 1.Inputs[Derived Column Input]"
              name="Sort Output"
              startId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Sort.Outputs[Sort Output]" />
            <path
              refId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping.Paths[Union All Output 1]"
              endId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Sort.Inputs[Sort Input]"
              name="Union All Output 1"
              startId="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Union All.Outputs[Union All Output 1]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{45F60CFF-87B7-4597-AFC0-226555E5C39E}"
      DTS:From="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Create AccountParentKey" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="198,42"
          Id="Package\Create AccountParentKey"
          TopLeft="507,390" />
        <NodeLayout
          Size="440,42"
          Id="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping"
          TopLeft="382,197" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="604,239">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,151"
              Start="0,0"
              End="0,143.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,143.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Create AccountParentKey">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="113,42"
          Id="Package\Create AccountParentKey\Lookup"
          TopLeft="381,107" />
        <NodeLayout
          Size="255,42"
          Id="Package\Create AccountParentKey\Extract AccountKey from DimAccount"
          TopLeft="0,55" />
        <NodeLayout
          Size="271,42"
          Id="Package\Create AccountParentKey\Load AccountParentKey into DimAccount"
          TopLeft="549,103" />
        <EdgeLayout
          Id="Package\Create AccountParentKey.Paths[OLE DB Source Output]"
          TopLeft="255,76">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="126,52"
              Start="0,0"
              End="118.5,52">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="59,0" />
                  <mssgle:CubicBezierSegment
                    Point1="59,0"
                    Point2="63,0"
                    Point3="63,4" />
                  <mssgle:LineSegment
                    End="63,48" />
                  <mssgle:CubicBezierSegment
                    Point1="63,48"
                    Point2="63,52"
                    Point3="67,52" />
                  <mssgle:LineSegment
                    End="118.5,52" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create AccountParentKey.Paths[Lookup Match Output]"
          TopLeft="494,126">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="55,0"
              Start="0,0"
              End="47.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="47.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-24.44138671875,5,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Create AccountParentKey\Lookup">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[FIN].[DimAccount]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Create AccountParentKey\Extract AccountKey from DimAccount">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Create AccountParentKey\Load AccountParentKey into DimAccount">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="220,42"
          Id="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Add PL Ledger Accounts Level"
          TopLeft="465,259" />
        <NodeLayout
          Size="221,42"
          Id="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Add BS Ledger Accounts Level"
          TopLeft="1212,240" />
        <NodeLayout
          Size="172,42"
          Id="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\BS Ledger Accounts"
          TopLeft="1202,114" />
        <NodeLayout
          Size="171,42"
          Id="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\PL Ledger Accounts"
          TopLeft="483,94" />
        <EdgeLayout
          Id="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping.Paths[Excel Source Output]"
          TopLeft="1288,156">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="34.5,84"
              Start="0,0"
              End="34.5,76.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,38" />
                  <mssgle:CubicBezierSegment
                    Point1="0,38"
                    Point2="0,42"
                    Point3="4,42" />
                  <mssgle:LineSegment
                    End="30.5,42" />
                  <mssgle:CubicBezierSegment
                    Point1="30.5,42"
                    Point2="34.5,42"
                    Point3="34.5,46" />
                  <mssgle:LineSegment
                    End="34.5,76.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="121,42"
          Id="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Union All"
          TopLeft="936,442" />
        <EdgeLayout
          Id="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping.Paths[Derived Column Output]"
          TopLeft="575,301">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="421.5,141"
              Start="0,0"
              End="421.5,133.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,66.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,66.5"
                    Point2="0,70.5"
                    Point3="4,70.5" />
                  <mssgle:LineSegment
                    End="417.5,70.5" />
                  <mssgle:CubicBezierSegment
                    Point1="417.5,70.5"
                    Point2="421.5,70.5"
                    Point3="421.5,74.5" />
                  <mssgle:LineSegment
                    End="421.5,133.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping.Paths[Derived Column Output1]"
          TopLeft="1322.5,282">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-307.166666666667,160"
              Start="0,0"
              End="-307.166666666667,152.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,90.747145187602" />
                  <mssgle:CubicBezierSegment
                    Point1="0,90.747145187602"
                    Point2="0,94.747145187602"
                    Point3="-4,94.747145187602" />
                  <mssgle:LineSegment
                    End="-303.166666666667,94.747145187602" />
                  <mssgle:CubicBezierSegment
                    Point1="-303.166666666667,94.747145187602"
                    Point2="-307.166666666667,94.747145187602"
                    Point3="-307.166666666667,98.747145187602" />
                  <mssgle:LineSegment
                    End="-307.166666666667,152.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="171,42"
          Id="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\OLE DB Destination"
          TopLeft="924,962" />
        <NodeLayout
          Size="188,42"
          Id="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Replace SourceName 1"
          TopLeft="1027,725" />
        <NodeLayout
          Size="188,42"
          Id="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Replace SourceName 2"
          TopLeft="965,811" />
        <EdgeLayout
          Id="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping.Paths[Derived Column Output2]"
          TopLeft="1121,767">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-62,44"
              Start="0,0"
              End="-62,36.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18"
                    Point2="0,22"
                    Point3="-4,22" />
                  <mssgle:LineSegment
                    End="-58,22" />
                  <mssgle:CubicBezierSegment
                    Point1="-58,22"
                    Point2="-62,22"
                    Point3="-62,26" />
                  <mssgle:LineSegment
                    End="-62,36.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping.Paths[Derived Column Output3]"
          TopLeft="1059,853">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-49.5,109"
              Start="0,0"
              End="-49.5,101.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,50.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,50.5"
                    Point2="0,54.5"
                    Point3="-4,54.5" />
                  <mssgle:LineSegment
                    End="-45.5,54.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-45.5,54.5"
                    Point2="-49.5,54.5"
                    Point3="-49.5,58.5" />
                  <mssgle:LineSegment
                    End="-49.5,101.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping.Paths[Excel Source Output1]"
          TopLeft="571.75,136">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,123"
              Start="0,0"
              End="0,115.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,115.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="98,42"
          Id="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\Sort"
          TopLeft="994,584" />
        <EdgeLayout
          Id="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping.Paths[Union All Output 1]"
          TopLeft="996.5,484">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="46.5,100"
              Start="0,0"
              End="46.5,92.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,46" />
                  <mssgle:CubicBezierSegment
                    Point1="0,46"
                    Point2="0,50"
                    Point3="4,50" />
                  <mssgle:LineSegment
                    End="42.5,50" />
                  <mssgle:CubicBezierSegment
                    Point1="42.5,50"
                    Point2="46.5,50"
                    Point3="46.5,54" />
                  <mssgle:LineSegment
                    End="46.5,92.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping.Paths[Sort Output]"
          TopLeft="1043,626">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="78,99"
              Start="0,0"
              End="78,91.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,45.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,45.5"
                    Point2="0,49.5"
                    Point3="4,49.5" />
                  <mssgle:LineSegment
                    End="74,49.5" />
                  <mssgle:CubicBezierSegment
                    Point1="74,49.5"
                    Point2="78,49.5"
                    Point3="78,53.5" />
                  <mssgle:LineSegment
                    End="78,91.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\PL Ledger Accounts">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\BS Ledger Accounts">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Extract AccountMapping Data From Excel and Load into DimAccountMapping\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>